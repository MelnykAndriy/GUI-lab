name: Checks

on:
  push:
    branches: [main]
  pull_request:
    branches: ["*"]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23.x
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Show npm debug log
        if: failure()
        run: cat /home/runner/.npm/_logs/*.log || true

      - name: Run ESLint
        run: npx eslint . --ext .js,.jsx,.ts,.tsx

      - name: Run Prettier check
        run: npx prettier --check .

      - name: Build application
        run: npm run build

      - name: Run tests with coverage
        run: npm run test -- --coverage

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7

      - name: Check coverage thresholds
        run: |
          COVERAGE_FILE="coverage/coverage-summary.json"
          if [ ! -f "$COVERAGE_FILE" ]; then
            echo "Coverage file not found!"
            exit 1
          fi
          
          LINES_COVERAGE=$(jq '.total.lines.pct' "$COVERAGE_FILE")
          STATEMENTS_COVERAGE=$(jq '.total.statements.pct' "$COVERAGE_FILE")
          FUNCTIONS_COVERAGE=$(jq '.total.functions.pct' "$COVERAGE_FILE")
          BRANCHES_COVERAGE=$(jq '.total.branches.pct' "$COVERAGE_FILE")
          
          echo "Lines coverage: $LINES_COVERAGE%"
          echo "Statements coverage: $STATEMENTS_COVERAGE%"
          echo "Functions coverage: $FUNCTIONS_COVERAGE%"
          echo "Branches coverage: $BRANCHES_COVERAGE%"
          
          # Example thresholds - adjust as needed
          if (( $(echo "$LINES_COVERAGE < 80" | bc -l) )) || \
             (( $(echo "$STATEMENTS_COVERAGE < 80" | bc -l) )) || \
             (( $(echo "$FUNCTIONS_COVERAGE < 75" | bc -l) )) || \
             (( $(echo "$BRANCHES_COVERAGE < 70" | bc -l) )); then
            echo "❌ Coverage is below thresholds!"
            exit 1
          fi
          
          echo "✅ Coverage meets all thresholds!"
